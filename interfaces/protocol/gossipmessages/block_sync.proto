syntax = "proto3";
package gossipmessages;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol/gossipmessages";

import "../primitives/crypto.proto";
import "../primitives/protocol.proto";
import "../protocol/gossipmessages/all.proto";
import "../protocol/blocks.proto";

enum BlockSyncMessageType {
    BLOCK_SYNC_RESERVED = 0;
    BLOCK_SYNC_AVAILABILITY_REQUEST = 1;
    BLOCK_SYNC_AVAILABILITY_RESPONSE = 2;
    BLOCK_SYNC_REQUEST = 3;
    BLOCK_SYNC_RESPONSE = 4;
}

// message headers

message BlockAvailabilityRequestMessage {
    option serialize_message = false;

    BlockAvailabilitySignedHeader block_availability_request_signed_header = 1;
    gossipmessages.MessageSigner signer = 2;
}

message BlockAvailabilityResponseMessage {
    option serialize_message = false;

    BlockAvailabilitySignedHeader block_availability_response_signed_header = 1;
    gossipmessages.MessageSigner signer = 2;
}

message BlockSyncRequestMessage {
    option serialize_message = false;

    BlockSyncRequestSignedHeader block_sync_request_signed_header = 1;
    gossipmessages.MessageSigner signer = 2;
}

message BlockSyncResponseMessage {
    option serialize_message = false;

    BlockSyncResponseSignedHeader block_sync_response_signed_header = 1;
    gossipmessages.MessageSigner signer = 2;
    repeated protocol.BlockPair block_pairs = 3; // TODO change to Block (oneof)
}

// message bodies

message BlockAvailabilitySignedHeader {
    BlockType block_type = 1;
    primitives.block_height first_available_block_height = 2;
    primitives.block_height last_available_block_height = 3;
    primitives.block_height last_committed_block_height = 4;    
}

message BlockSyncRequestSignedHeader {
    BlockType block_type = 1;
    primitives.block_height first_available_block_height = 2;
    primitives.block_height last_available_block_height = 3;
    primitives.block_height last_committed_block_height = 4;    
}

message BlockSyncResponseSignedHeader {
    BlockType block_type = 1;
    primitives.block_height first_block_height = 2;
    primitives.block_height last_block_height = 3;
    primitives.block_height last_committed_block_height = 4;
    repeated primitives.sha256 block_hashes = 5; // TODO, single merged hash / merkle root.
}

enum BlockType {
    BLOCK_TYPE_RESERVED = 0;
    BLOCK_TYPE_BLOCK_PAIR = 1;
    BLOCK_TYPE_TRANSACTIONS_BLOCK = 2;
    BLOCK_TYPE_RESULTS_BLOCK = 3;
}