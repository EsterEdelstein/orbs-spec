syntax = "proto3";
package protocol;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol";

import "primitives/crypto.proto";
import "protocol/contracts.proto";

enum NetworkType {
    NETWORK_TYPE_RESERVED = 0;
    NETWORK_TYPE_MAIN_NET = 77;
    NETWORK_TYPE_TEST_NET = 84;
}

// TODO: is this redundant because we have onof?
enum AddressScheme {
    ADDRESS_SCHEME_RESERVED = 0;
    ADDRESS_SCHEME_EDDSA_20B = 1;
    ADDRESS_SCHEME_SMART_CONTRACT = 2;
}

message Sender {
    AddressScheme address_scheme = 1;
    oneof scheme {
        EdDSA01Sender eddsa = 2;
        SmartContractSender smart_contract = 3;
    }
}

message EdDSA01Sender {
    NetworkType network_type = 1;
    primitives.ed25519_pkey sender_public_key = 2;
    // Signature = Ed25519 Signature(Transaction)
    // Address = RIPMD160(SHA(EdDSA01Sender))
}

message SmartContractSender {
    NetworkType network_type = 1;
    string contract_name = 2;
    repeated protocol.MethodArgument sender_input_argument = 3; // For example account_name
    // Signature = signature_input_arguments
    // Address = RIPMD160(SHA(SmartContractSender))
}