syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/address.proto";
import "protocol/transactions.proto";

message TransactionsBlock {
  TransactionsBlockHeader header = 1;
  TransactionsBlockMetaData meta_data = 2;
  TransactionsBlockBody body = 3;
  TransactionsBlockProof block_proof = 4;
}

message ResultsBlock {
  ResultsBlockHeader header = 1;
  ResultsBlockBody body = 2;
  ResultsBlockProof block_proof = 3;
}

message TransactionsBlockHeader {
  Uint32 version = 1;
  Uint32 virtual_chain = 2;
  Uint64 block_height = 3;
  SHA256 prev_block_hash_ptr = 4;
  Uint64 time_stamp = 5;
  SHA256 transactions_root_hash = 6;
  SHA256 meta_data_hash = 7;
}

message TransactionsBlockMetaData {
  Uint32 version = 1;
  repeated Uint32 nodes_reputaion = 2;
}

message TransactionsBlockBody {
  repeated Transaction transactions = 1;
}

message TransactionsBlockProof {
  Bytes consensus_dependent_data = 1; // part of the signature, opaque to the protocol.
  repeated BlockProof block_signature = 2;
}

message BlockProof {
  Ed25519PKey public_key = 1;
  Ed25519Sig signature = 2;
}

message ResultsBlockHeader {
  Uint32 version = 1;
  Uint32 virtual_chain = 2;
  Uint64 block_height = 3;
  SHA256 prev_block_hash_ptr = 4;
  Uint64 time_stamp = 5;
  SHA256 receipts_root_hash = 6;
  SHA256 state_diff_hash = 7;
  SHA256 transactions_block_hash_ptr = 8;
  SHA256 pre_execution_state_root_hash = 9;
  ResultsBlockBloomFilter bloom_filter = 10;
}

message ResultsBlockBloomFilter {
  Bytes filter = 1;
  // Events bloom filter: (Hard coded indices: 1 - tx_id, 2 - Sender address, 3 - Smart contract address)
}

message ResultsBlockBody {
  repeated TransactionReceipt transaction_receipts = 1;
  repeated ServiceStateDiff service_state_diff = 2;
}

message ResultsBlockProof {
  Bytes consensus_dependent_data = 1; // part of the signature, opaque to the protocol.
  repeated BlockProof block_signature = 2;
}

message ServiceStateDiff {
  Address contract_address = 1;
  repeated StateDiff state_diff = 2;
}

/* moved to protocol_primitives
message StateDiff {
  RIP160SHA256 state_key = 1;
  Bytes state_value = 2;
}
*/

