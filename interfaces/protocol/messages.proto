syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/address.proto";
import "protocol/transactions.proto";
import "protocol/blocks.proto";


message GossipMessage {
  Uint32 version = 1; // protocol version
  MessageDestination message_destination = 2;
  MessageTopic topic = 3;
  Uint32 virtual_chain = 4;
  Bytes payload = 5;
//  Uint32 qos_param = 6;
//  Ed25519PKey sender_public_key = 7;
//  Ed25519Sig signature = 8;
}

message MessageDestination {
  repeated Ed25519PKey node_public_key = 1;
}

enum MessageTopic {
  RESERVED = 0;
  LITE_HELIX_CONSEMSUS = 1;
  TRANSACTIONS_GOSSIP = 2;
  NODE_SYNC = 3;
}

// Lite Helix Consensus Messages
message PBFTMessage {
  uint32 version = 1;
  ConsensusMessageTopic message_topic = 2;
  oneof pbft_message {
    PrePrepare pre_prepare = 2;
    Prepare prepare = 3;
    Commit commit = 4;
    ViewChange view_change = 5;
    NewView new_view = 6;
  }
}

enum ConsensusMessageTopic {
  PRE_PREPARE = 0;
  PREPARE = 1;
  COMMIT = 2;
  NEW_VIEW = 3;
  VIEW_CHANGE = 4;  
}

message PrePrepare {
  Uint64 view = 1;
  Uint64 term_number = 2;
  SHA256 message_digest = 3;
  Bytes message = 4;
  Ed25519PKey public_key = 5;
  Ed25519Sig signature = 6;
}

message Prepare {
  Uint64 view = 1;
  Uint64 term_number = 2;
  SHA256 message_digest = 3;
  Ed25519PKey public_key = 4;
  Ed25519Sig signature = 5;
}

message Commit {
  Uint64 view = 1;
  Uint64 term_number = 2;
  SHA256 message_digest = 3;
  Ed25519PKey public_key = 4;
  Ed25519Sig signature = 5;
}

message ViewChange {
  Uint64 view = 1;
  Uint64 term_number = 2;
  //TBC
  // Block height, hash_ptr, current block proofs
}

message NewView {
  Uint64 view = 1;
  Uint64 term_number = 2;
  //TBC
}

// Add .. 

// NodeSync Messages
message NODE_SYNC {
  Uint32 version = 1;
  NodeSyncTopic message_topic = 2;
  oneof nodes_sync_message {
    BlockSyncRequest block_sync_request = 3;
    BlockSyncResponse block_sync_response = 4;
  }
}

message BlockSyncRequest {
  Ed25519PKey sender_public_key = 1;
  BlockSyncRequestCode request_code = 2;
  Uint64 first_block_height = 3;
  Uint64 last_block_height = 4;
  Ed25519Sig signature = 6;
}

message BlockSyncResponse {
  Ed25519PKey sender_public_key = 1;
  BlockSyncRequestCode request_code = 2;
  Uint64 first_available_block_height = 3;
  Uint64 last_available_block_height = 4;
  Uint64 top_block_height = 5;
  repeated TransactionsBlock ordering_block = 5;
  repeated ResultsBlock validation_block = 6;
  Ed25519Sig signature = 7;
}

enum NodeSyncTopic {  
  BLOCK_SYNC_REQUEST = 0;
  BLOCK_SYNC_RESPONSE = 1; 
  BLOCK_AVAILABILITY_REQUEST = 2;
  BLOCK_AVAILABILITY_RESPONSE = 3; 
}

enum BlockSyncRequestCode {
  TRANSACTIONS_AND_RESULTS_BLOCK_REQUEST = 0;
  TRANSACTIONS_BLOCK_REQUEST = 1;
  RESULTS_BLOCK_REQUEST = 2;
}

// Transaction Relay messages
message TransactionRelay {
  uint32 version = 1;
  TransactionRelayTopic message_topic = 2; 
  oneof transaction_relay {
    TransactionsBatch transactions_batch = 3;
  }
}

enum TRANSACTION_RELAY_TOPIC {
  TRANSACTION_BATCH = 0;
}

message TransactionBatch {
  Ed25519PKey public_key = 1;
  repeated Transaction transaction = 2;
  Ed25519Sig signature = 3;
}

message ClientResponse { // move to JSON description
  Uint32 version = 1;
  Uint256 tx_id = 2;
  TransactionStatus transaction_status = 3;
  String status_message = 4;
  Uint64 block_height = 5;
  Uint32 virtual_chain = 6;
  Uint64 time_stamp = 7;
}