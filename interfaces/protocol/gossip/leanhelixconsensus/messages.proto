syntax = "proto3";
package leanhelixconsensus;
option go_package = "github.com/orbs-network/orbs-spec/types/go/protocol/gossip/leanhelixconsensus";

import "../../primitives/types.proto";

message Message {
    oneof lean_helix_message {
        PrePrepareMessage pre_prepare = 1;
        PrepareMessage prepare = 2;
        CommitMessage commit = 3;
        ViewChangeMessage view_change = 4;
        NewViewMessage new_view = 5;
    }
}

// TODO isn't this redundant with oneof?
enum LeanHelixMessageType {
    LEAN_HELIX_CONSENSUS_RESERVED = 0;
    LEAN_HELIX_CONSENSUS_PRE_PREPARE = 1;
    LEAN_HELIX_CONSENSUS_PREPARE = 2;
    LEAN_HELIX_CONSENSUS_COMMIT = 3;
    LEAN_HELIX_CONSENSUS_NEW_VIEW = 4;
    LEAN_HELIX_CONSENSUS_VIEW_CHANGE = 5;
}

message PrePrepareMessage {
    CommitPreparePPMessageSignedFields pre_prepare_signed_fields = 1;
    primitives.ed25519_sig signature = 2;
    bytes block_pair_data = 3;
}
  
message PrepareMessage {
    CommitPreparePPMessageSignedFields prepare_signed_fields = 1;
    primitives.ed25519_sig signature = 2;
}

message CommitMessage {
    CommitPreparePPMessageSignedFields commit_signed_fields = 1;
    primitives.ed25519_sig signature = 2;
    primitives.bls1_sig random_seed_share = 3;
}

message ViewChangeMessage {
    ViewChangeSignedFields view_change_signed_fields = 1;
    primitives.ed25519_sig signature = 2;
    bytes block_pair_data = 3;
}

message NewViewMessage {
    NewViewProof new_view_signed_fields = 1;
    primitives.ed25519_sig header_signature = 2;
    bytes block_pair_data = 3;
}

message CommitPreparePPMessageSignedFields {
    LeanHelixMessageType message_type = 1;
    uint64 block_height = 2;
    uint32 view = 3;
    primitives.sha256 block_hash = 4; // primitives.sha256(TransactionBlockHeader) XOR primitives.sha256(ResultsBlockHeader).
    primitives.ed25519_pkey sender_public_key = 5;
}

message ViewChangeSignedFields {
    LeanHelixMessageType message_type = 1;
    uint64 block_height = 2;
    uint32 view = 3;
    PreparedProof prepared_proof = 4;
    primitives.ed25519_pkey sender_public_key = 5;
}

message PreparedProof {
    repeated CommitPreparePPMessageSignedFields pp_prepare_signed_fields = 1;
    repeated primitives.ed25519_sig pp_prepare_signature = 2;
}

message NewViewSignedFields {
    LeanHelixMessageType message_type = 1;
    uint64 block_height = 2;
    uint32 view = 3;
    NewViewProof new_view_proof = 4;
    CommitPreparePPMessageSignedFields nv_pp_signed_fields = 5;
    primitives.ed25519_sig nv_pp_signature = 6;
    primitives.ed25519_pkey sender_public_key = 7;
}

message NewViewProof {
    repeated ViewChangeSignedFields view_change_header = 1;
    repeated primitives.ed25519_sig view_change_header_signature = 2;
}

message LeanHelixBlockProof { 
    LeanHelixMessageType commit_message_type = 1;
    uint64 block_height = 2;
    uint32 view = 3;
    primitives.uint256 block_hash_mask = 4;
    primitives.uint256 block_hash = 5;
    repeated primitives.ed25519_pkey pkey = 6;
    repeated primitives.ed25519_sig signature = 7;
    primitives.bls1_sig random_seed_signature = 8;
}