syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/gossip.proto";
import "protocol/blocks.proto";

service BlockStorage {
  // Called by Consensus Core
  rpc CommitBlock (CommitBlockInput) returns (CommitBlockOutput);
  rpc GetLastCommittedBlockHeight (GetLastCommittedBlockHeightInput) returns (GetLastCommittedBlockHeightOutput);
  
  // Called by Public API
  rpc GetTransactionReceipt (GetTransactionReceiptInput) returns (GetTransactionReceipt);

  //Called by Consnesus Algo
  rpc GetTransactionsBlockHeader (GetTransactionsBlockHeaderInput) returns (GetTransactionsBlockHeaderOutput);
  rpc GetResultsBlockHeader (GetResultsBlockHeaderInput) returns (GetResultsBlockHeaderOutput);

  //Gossip
  rpc GossipMessageReceived (GossipMessageReceivedInput) returns (GossipMessageReceivedOutput);
  rpc OnBlockAvailabilityRequest (OnBlockAvailabilityRequestInput) returns (OnBlockAvailabilityRequestOutput);
  rpc OnBlockAvailabilityResponse (OnBlockAvailabilityResponseInput) returns (OnBlockAvailabilityResponseOutput);
  rpc OnBlockSyncRequest (OnBlockSyncRequestInput) returns (OnBlockSyncRequestOutput);
  rpc OnBlockSyncResponse (OnBlockSyncResponseInput) returns (OnBlockSyncResponseOutput);



//  rpc GetBlockPairsByHeight (GetBlockPairsByHeightInput) returns (GetBlockPairsByHeightOutput);
//  rpc GetTransactionsBlockByHeight (GetBlocksByHeightInput) returns (GetBlocksByHeightOutput);
//  rpc GetResultsBlockByHeight (GetBlocksByHeightInput) returns (GetBlocksByHeightOutput);
//  rpc GetReceipts(GetBlockReceiptsInput) returns (GetBlockReceiptsOutput);
//  rpc GetStateDiff(GetStateDiffInput) returns (GetStateDiffOutput);
//  rpc GetTransactionsBlockByID (GetBlockByIDInput) returns (GetTransactionsBlockOutput);
//  rpc GetResultsBlockByID (GetBlockByIDInput) returns (GetResultsBlockOutput);
//  rpc SubscribeEvents(SubscribeEventsInput) returns (SubscribeEventsOutput);
//  rpc UnSubscribeEvents(SubscribeEventsInput) returns (SubscribeEventsOutput);
//  rpc SubscribeRecipt(SubscribeReciptInput) returns (SubscribeReciptOutput);
}

message CommitBlockInput {
  TransactionsBlock transactions_block = 1;
  ResultsBlock results_block = 2;
}

message CommitBlockOutput {

}

message GetLastCommittedBlockHeightInput {
  // empty
}

message GetLastCommittedBlockHeightOutput {
  Uint64 last_committed_block_height = 1;
}

message GetTransactionReceiptInput {
  Uint256 tx_id = 1;
  Uint64 timestamp = 2;
}

message GetTransactionReceiptOutput {
  TransactionReceipt receipt = 1;
  Uint64 block_height = 2;
  Uint64 block_timestamp = 3;
}

message GetTransactionsBlockHeaderInput {
  Uint64 block_height = 1;
}

message GetTransactionsBlockHeaderOutput {
  TransactionsBlockHeader transactions_block_header = 1;
  TransactionsBlockMetaData transactions_block_meta_data = 2;
  TransactionsBlockProof transactions_block_proof = 3;
}

message GetResultsBlockHeaderInput {
  Uint64 block_height = 1;
}

message GetResultsBlockHeaderOutput {
  ResultsBlockHeader results_block_header = 1;
  ResultsBlockProof results_block_proof = 2;
}

message OnBlockAvailabilityRequestInput {
  BlockAvailabilityRequest block_availability_request = 1;
}

message OnBlockAvailabilityRequestOutput {

}

message OnBlockAvailabilityResponseInput {
  BlockAvailabilityRequest block_availability_response = 1;
}

message OnBlockAvailabilityResponseOutput {

}

message OnBlockSyncRequestInput {
  BlockSyncRequest block_sync_request = 1;
}

message OnBlockSyncRequestOutput {

}

message OnBlockSyncResponseInput {
  BlockSyncResponse block_sync_response = 1;
}

message OnBlockSyncResponseOutput {

}
