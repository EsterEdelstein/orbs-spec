syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/gossip.proto";
import "protocol/blocks.proto";

service BlockStorage {
  rpc AddBlock (AddBlockInput) returns (AddBlockOutput);
  rpc GossipMessageReceived (GossipMessageReceivedInput) returns (GossipMessageReceivedOutput);
  rpc GetTransactionReceipt (GetTransactionReceiptInput) returns (GetTransactionReceipt);
  rpc SubscribeReceipts (SubscribeReceiptsInput) returns (SubscribeReceiptsOutput);
  rpc RequestStateDiff (SubscribeStateDiffInput) returns (SubscribeStateDiffOutput);
//  rpc GetBlockPairsByHeight (GetBlockPairsByHeightInput) returns (GetBlockPairsByHeightOutput);
//  rpc GetTransactionsBlockByHeight (GetBlocksByHeightInput) returns (GetBlocksByHeightOutput);
//  rpc GetResultsBlockByHeight (GetBlocksByHeightInput) returns (GetBlocksByHeightOutput);
//  rpc GetReceipts(GetBlockReceiptsInput) returns (GetBlockReceiptsOutput);
//  rpc GetStateDiff(GetStateDiffInput) returns (GetStateDiffOutput);
//  rpc GetTransactionsBlockByID (GetBlockByIDInput) returns (GetTransactionsBlockOutput);
//  rpc GetResultsBlockByID (GetBlockByIDInput) returns (GetResultsBlockOutput);
//  rpc SubscribeEvents(SubscribeEventsInput) returns (SubscribeEventsOutput);
//  rpc UnSubscribeEvents(SubscribeEventsInput) returns (SubscribeEventsOutput);
//  rpc SubscribeRecipt(SubscribeReciptInput) returns (SubscribeReciptOutput);
}

message AddBlockInput {
  TransactionsBlock transactions_block = 1;
  ResultsBlock results_block = 2;
}

message AddBlockOutput {
  // empty
}

message GetTransactionReceiptInput {
  Uint256 tx_id = 1;
  Uint64 timestamp = 2;
}

message GetTransactionReceiptOutput {
  TransactionReceipt receipt = 1;
  Uint64 block_height = 2;
  Uint64 block_timestamp = 3;
}

message GetTransactionReceiptResponse {
  TransactionReceipt receipt = 1;
  Uint64 receipt_block_height = 2;
  Uint64 receipt_block_timestamp = 3;
}

message SubscribeReceiptsInput {
//  Ed25519PKey consumer_id = 1; - remove, only local service
  Uint64 consumer_block_height = 2;
//  Uint64 target_block_height = 3 - remove, not needed in V1
}

message SubscribeReceiptsOutput {
  // empty
}

message SubscribeStateDiffInput {
//  Ed25519PKey consumer_id = 1; - remove, only local service
  Uint64 consumer_block_height = 2;
//  Uint64 target_block_height = 3 - remove, not needed in V1
}

message SubscribeStateDiffOutput {
  // empty
}




/*
message SubscribeEventsInput {
  Ed25519PKey subscriber_id = 1;
  repeated EventSubscription events = 2;
}

message SubscribeEventsOutput {
  Uint64 token = 1;
}

message EventSubscription {
  EventType event_type = 1;
  Address contract_address = 2; // Valid only for per smart contract events.
  Uint32 event_index = 3;
  Uint256 event_id = 4;
  //Uint32 exeperation = 5;
}

enum EventType {
  GLOBAL = 0;
  SMART_CONTRACT = 1;
}
message UnSubscribeEventsInput {
  Uint64 token = 1;
}

message UnSubscribeEventsOutput {
  // empty
}

message EventData {
  EventType event_type = 1;
  Address contract_address = 2; 
  Uint32 event_index = 3;
  Uint256 event_id = 4;
  String Event = 5;
}

message SubscribeReciptInput {
  SHA256 tx_id = 1;  
}

message SubscribeReciptOutput {
  Bool success = 1;
}
*/
