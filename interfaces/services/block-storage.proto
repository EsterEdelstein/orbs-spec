syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/gossip.proto";
import "protocol/blocks.proto";

service BlockStorage {
  rpc CommitOrderingBlock (CommitOrderingBlockInput) returns (CommitOrderingBlockOutput);
  rpc CommitValidationBlock (CommitValidationBlockInput) returns (CommitValidationBlockOutput);
  rpc GetOrderingBlockByHeight (GetBlockByHeightInput) returns (GetOrderingBlockOutput);
  rpc GetValidationBlockByHeight (GetBlockByHeightInput) returns (GetValidationBlockOutput);
  rpc GetOrderingBlockByID (GetBlockByIDInput) returns (GetOrderingBlockOutput);
  rpc GetValidationBlockByID (GetBlockByIDInput) returns (GetValidationBlockOutput);
  rpc GetTopBlock(GetTopBlockInput) returns (GetTopBlockOutput);
  rpc ProcessGossipMessage (ProcessGossipMessageInput) returns (ProcessGossipMessageOutput);
//  rpc SubscribeEvents(SubscribeEventsInput) returns (SubscribeEventsOutput);
//  rpc UnSubscribeEvents(SubscribeEventsInput) returns (SubscribeEventsOutput);
//  rpc SubscribeRecipt(SubscribeReciptInput) returns (SubscribeReciptOutput);
  rpc GetTransactionReceipt(GetTransactionReceiptInput) returns (GetTransactionReceipt);
}

message CommitOrderingBlockInput {
  OrderingBlock ordering_block = 1;
}

message CommitOrderingBlockOutput {
 
}

message CommitValidationBlockInput {
  ValidationBlock validation_block = 1;
}

message CommitValidationBlockOutput {

}

message GetBlockByHeightInput {

}

message GetOrderingBlockOutput {
  OrderingBlock ordering_block = 1;
}

message GetValidationBlockOutput {
  ValidationBlock validation_block = 1;
}

message GetBlockByIDInput {
  SHA256 block_id = 1;
}

message GetTopBlockInput { 
  // empty 
}

message GetTopBlockOutput {
  Uint64 block_height = 1;
  SHA256 block_id = 1;
}

message SubscribeEventsInput {
  Ed25519PKey subscriber_id = 1;
  repeated EventSubscription events = 2;
}

message SubscribeEventsOutput {
  Uint64 token = 1;
}

message EventSubscription {
  EventType event_type = 1;
  Address contract_address = 2; // Valid only for per smart contract events.
  Uint32 event_index = 3;
  Uint256 event_id = 4;
  //Uint32 exeperation = 5;
}

enum EventType {
  GLOBAL = 0;
  SMART_CONTRACT = 1;
}
message UnSubscribeEventsInput {
  Uint64 token = 1;
}

message UnSubscribeEventsOutput {
  // empty
}

message EventData {
  EventType event_type = 1;
  Address contract_address = 2; 
  Uint32 event_index = 3;
  Uint256 event_id = 4;
  String Event = 5;
}

message SubscribeReciptInput {
  SHA256 tx_id = 1;  
}

message SubscribeReciptOutput {
  Bool success = 1;
}

message GetTransactionReceiptInput {
  Uint256 tx_id = 1;
  Uint64 time_stamp = 2;
}

message GetTransactionReceiptOutput {
  TransactionReceipt = 1;
}