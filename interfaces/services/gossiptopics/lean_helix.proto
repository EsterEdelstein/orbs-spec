syntax = "proto3";
package gossiptopics;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services/gossiptopics";

import "../primitives/crypto.proto";
import "../protocol/gossipmessages/all.proto";
import "../protocol/gossipmessages/lean_helix.proto";
import "../protocol/gossipmessages/all.proto";

option serialize_messages = false;

service LeanHelix {
    // registration methods for external handlers that wish to receive callbacks
    option register_handler = "LeanHelixHandler";

    // called by anyone looking to send gossip messages
    rpc SendLeanHelixPrePrepare (LeanHelixPrePrepareInput) returns (LeanHelixOutput);
    rpc SendLeanHelixPrepare (LeanHelixPrepareInput) returns (LeanHelixOutput);
    rpc SendLeanHelixCommit (LeanHelixCommitInput) returns (LeanHelixOutput);
    rpc SendLeanHelixViewChange (LeanHelixViewChangeInput) returns (LeanHelixOutput);
    rpc SendLeanHelixNewView (LeanHelixNewViewInput) returns (LeanHelixOutput);
}

service LeanHelixHandler {
    rpc HandleLeanHelixPrePrepare (LeanHelixPrePrepareInput) returns (LeanHelixOutput);
    rpc HandleLeanHelixPrepare (LeanHelixPrepareInput) returns (LeanHelixOutput);
    rpc HandleLeanHelixCommit (LeanHelixCommitInput) returns (LeanHelixOutput);
    rpc HandleLeanHelixViewChange (LeanHelixViewChangeInput) returns (LeanHelixOutput);
    rpc HandleLeanHelixNewView (LeanHelixNewViewInput) returns (LeanHelixOutput);
}

message LeanHelixPrePrepareInput {
    gossipmessages.RecipientsList recipient_list = 1;
    gossipmessages.LeanHelixPrePrepareMessage pre_prepare_message = 2;
}

message LeanHelixPrepareInput {
    gossipmessages.RecipientsList recipient_list = 1;
    gossipmessages.LeanHelixPrepareMessage prepare_message = 2;
}

message LeanHelixCommitInput {
    gossipmessages.RecipientsList recipient_list = 1;
    gossipmessages.LeanHelixCommitMessage commit_message = 2;
}

message LeanHelixViewChangeInput {
    gossipmessages.RecipientsList recipient_list = 1;
    gossipmessages.LeanHelixViewChangeMessage view_change = 2;
}

message LeanHelixNewViewInput {
    gossipmessages.RecipientsList recipient_list = 1;
    gossipmessages.LeanHelixNewView new_view = 2;
}

message LeanHelixOutput {
}
