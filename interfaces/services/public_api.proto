syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "protocol/publicapi/client.proto";
import "services/handlers/transaction_results.proto";

option serialize_service_args = false;

// relies on TransactionPool, BlockStorage, VirtualMachine
service PublicApi {
    // implements interfaces for handling callbacks from other services
    option implement_handler = "handlers.TransactionResultsHandler";

    // called by ClientSdk
    rpc SendTransaction (SendTransactionInput) returns (SendTransactionOutput);
    rpc CallMethod (CallMethodInput) returns (CallMethodOutput);
    rpc GetTransactionStatus (GetTransactionStatusInput) returns (GetTransactionStatusOutput);
}

message SendTransactionInput {
    publicapi.SendTransactionInput client_input = 1;
}

message SendTransactionOutput {
    publicapi.SendTransactionOutput client_output = 1;
}

message CallMethodInput {
    publicapi.CallMethodInput client_input = 1;
}

message CallMethodOutput {
    publicapi.CallMethodOutput client_output = 1;
}

message GetTransactionStatusInput {
    publicapi.GetTransactionStatusInput client_input = 1;
}

message GetTransactionStatusOutput {
    publicapi.GetTransactionStatusOutput client_output = 1;
}