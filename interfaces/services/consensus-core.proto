syntax = "proto3";

import "protocol/blocks.proto";
import "protocol/primitives.proto";

service TransactionPool {
  rpc RequestNewOrderingBlock (RequestNewOrderingBlockInput) returns (RequestNewOrderingBlockOutput);
  rpc RequestNewValidationBlock (RequestNewValidationBlockInput) returns (RequestNewValidationBlockOutput);
  rpc ValidateOrderingBlock (ValidateBlockOrderingInput) returns (ValidateBlockOrderingOutput);
  rpc ValidateValidationBlock (ValidateValidationBlockInput) returns (ValidateValidationBlockOutput);
  rpc CommitOrderingBlock (CommitOrderingBlocknput) returns (CommitOrderingBlockOutput);
  rpc CommitValidationBlock (CommitValidationBlockInput) returns (CommitValidationBlockOutput);
  rpc RequestOrderingCommittee (RequestCommitteeInput) returns (RequestCommitteeOutput);
  rpc RequestValidationCommittee (RequestCommitteeInput) returns (RequestCommitteeOutput);
  rpc GetTopBlockHeight (GetTopBlockHeightInput) returns (GetTopBlockHeightOutput);
}

message RequestNewOrderingBlockInput {

}

message RequestNewOrderingBlockOutput {
    OrderingBlock ordering_block = 1;
}

message RequestNewValidationBlockInput {

}

message RequestNewValidationBlockOutput {
    ValidationBlock validation_block = 1;
}

message ValidateOrderingBlockInput {
    OrderingBlock ordering_block = 1;
}

message ValidateOrderingBlockOutput {
    BlockStatus status = 1;
}

message ValidateValidationBlockInput {
    ValidationBlock validation_block = 1;
}

message ValidateValidationBlockOutput {
    BlockStatus status = 1;
}

message CommitOrderingBlockInput {
    OrderingBlockProof block_proof = 1;
}

message CommitOrderingBlockOutput {
    // empty
}

message CommitValidationBlockInput {
    ValidationBlockProof block_proof = 1;
};

message CommitValidationBlockOutput {
    // empty
}

enum BlockStatus {
    VALID = 0;
    INVALID = 1;
}

message RequestCommitteeInput {
    Uint64 random_seed = 1;
    Uint32 committee_size = 2;
}

message RequestCommitteeOutput {
    repeated Ed25519PKey node_id = 1;
}

message GetTopBlockHeightInput {
    //empty
}

message GetTopBlockHeightOutput {
    Uint64 top_block_hieght = 1;
}