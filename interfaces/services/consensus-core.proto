syntax = "proto3";

import "protocol/blocks.proto";
import "protocol/primitives.proto";

service TransactionPool {
  rpc RequestNewTransactionsBlock (RequestNewTransactionsBlockInput) returns (RequestNewTransactionsBlockOutput);
  rpc RequestNewResultsBlock (RequestNewResultsBlockInput) returns (RequestNewResultsBlockOutput);
  rpc ValidateTransactionsBlock (ValidateBlockOrderingInput) returns (ValidateBlockOrderingOutput);
  rpc ValidateResultsBlock (ValidateResultsBlockInput) returns (ValidateResultsBlockOutput);
  rpc CommitBlock (CommitBlockInput) returns (CommitBlockOutput);
//  rpc RequestOrderingCommittee (RequestCommitteeInput) returns (RequestCommitteeOutput);
//  rpc RequestValidationCommittee (RequestCommitteeInput) returns (RequestCommitteeOutput);
  rpc GetLastCommittedBlockHeight (GetLastCommittedBlockHeightInput) returns (GetLastCommittedBlockHeightOutput);
}

message RequestNewTransactionsBlockInput {

}

message RequestNewTransactionsBlockOutput {
    TransactionsBlock ordering_block = 1;
}

message RequestNewResultsBlockInput {

}

message RequestNewResultsBlockOutput {
    ResultsBlock validation_block = 1;
}

message ValidateTransactionsBlockInput {
    TransactionsBlock ordering_block = 1;
}

message ValidateTransactionsBlockOutput {
    BlockStatus status = 1;
}

message ValidateResultsBlockInput {
    ResultsBlock validation_block = 1;
}

message ValidateResultsBlockOutput {
    BlockStatus status = 1;
}

message CommitBlockInput {
    TransactionsBlockProof block_proof = 1;
}

message CommitBlockOutput {
    // empty
}

enum BlockStatus {
    VALID = 0;
    INVALID = 1;
}

/*
message RequestCommitteeInput {
    Uint64 random_seed = 1;
    Uint32 committee_size = 2;
}

message RequestCommitteeOutput {
    repeated Ed25519PKey node_id = 1;
}
*/

message GetLastCommittedBlockHeightInput {
    //empty
}

message GetLastCommittedBlockHeightOutput {
    Uint64 committed_block_height = 1;
    Uint64 committed_block_timestamp = 2;
}