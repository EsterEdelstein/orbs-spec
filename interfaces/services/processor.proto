syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/protocol-primitives.proto";
import "protocol/address.proto";


service Processor {
    // Called by Virtual-machine
    rpc ProcessCall (ProcessCallInput) returns (ProcessCallOutput);
    rpc DeployNativeService (DeployNativeServiceInput) returns (DeployNativeServiceOutput);
}
  
message ProcessCallInput {
    Uint32 context_id = 1;
    ContractAddress contract = 2;
    MethodAddress method = 3;
    repeated MethodArgument input_argument = 4;
    AccessScope access_scope = 5;
    PermissionScope permission_scope = 6;
    ContractAddress calling_service = 7; // TBD - move to SDK
    Sender transaction_sender = 8; // TBD - move to SDK
}

message ProcessCallOutput {
    repeated MethodArgument output_argument = 1;
    CallMethodStatus call_status = 2; 
}

enum AccessScope {
    READ_ONLY = 0;
    READ_WRITE = 1;
}

enum PermissionScope {
    SYSTEM_PERMISSION = 0;
    SERVICE_PERMISSION = 1;
}

message DeployNativeServiceInput {
    Uint32 context_id = 1;
    ContractAddress contract = 2;
    AccessScope access_scope = 3; 
    PermissionScope permission_scope = 4;
    ContractAddress calling_service = 5; // TBD - move to SDK
    Sender transaction_sender = 6; // TBD - move to SDK
}

message DeployNativeServiceOutput {
    DeployServiceStatus status = 1;       
}

enum DeployServiceStatus {
    DEPLOEYD_SUCCESSFULLY = 0;
    DEPLOY_FAILED = 1; 
}