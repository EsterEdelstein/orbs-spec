syntax = "proto3";
package services;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services";

import "protocol/contracts.proto";
import "protocol/addresses.proto";
import "protocol/results.proto";

service Processor {
    // called by VirtualMachine
    rpc ProcessCall (ProcessCallInput) returns (ProcessCallOutput);
    rpc DeployNativeService (DeployNativeServiceInput) returns (DeployNativeServiceOutput);
}
  
message ProcessCallInput {
    uint32 context_id = 1;
    protocol.ContractAddress contract = 2;
    protocol.MethodAddress method = 3;
    repeated protocol.MethodArgument input_argument = 4;
    AccessScope access_scope = 5;
    PermissionScope permission_scope = 6;
    protocol.ContractAddress calling_service = 7; // TODO: move to SDK
    protocol.Sender transaction_sender = 8; // TODO: move to SDK
}

message ProcessCallOutput {
    repeated protocol.MethodArgument output_argument = 1;
    protocol.CallMethodStatus call_status = 2;
}

// TODO: maybe move this to protocol folder
enum AccessScope {
    ACCESS_SCOPE_RESERVED = 0;
    ACCESS_SCOPE_READ_ONLY = 1;
    ACCESS_SCOPE_READ_WRITE = 2;
}

enum PermissionScope {
    PERMISSION_SCOPE_RESERVED = 0;
    PERMISSION_SCOPE_SYSTEM = 1;
    PERMISSION_SCOPE_SERVICE = 2;
}

message DeployNativeServiceInput {
    uint32 context_id = 1;
    protocol.ContractAddress contract = 2;
    AccessScope access_scope = 3; 
    PermissionScope permission_scope = 4;
    protocol.ContractAddress calling_service = 5; // TODO: move to SDK
    protocol.Sender transaction_sender = 6; // TODO: move to SDK
}

message DeployNativeServiceOutput {
    DeployServiceStatus status = 1;       
}

// TODO: do we want a specific result? can't we use the general one?
enum DeployServiceStatus {
    DEPLOY_SERVICE_STATUS_RESERVED = 0;
    DEPLOY_SERVICE_STATUS_SUCCESS = 1;
    DEPLOY_SERVICE_STATUS_FAILED = 2;
}