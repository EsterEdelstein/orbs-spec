syntax = "proto3";

import "primitives/transactions.proto";
import "primitives/gossip-listener.proto";
import "services/configuration-manager.proto";

service TransactionPool {
  // Called by Public API
  rpc AddNewTransaction (AddNewTransactionInput) returns (AddNewTransactionOutputWithException);
  rpc GetTransactionStatus (GetTransactionStatusInput) returns (GetTransactionStatusOutput);
  // Called by Consensus Core
  rpc CollectTransactions (CollectTransactionsInput) returns (CollectTransactionsOutput); // Transactions Streaming 
  rpc ValidateTransactionsCollection (ValidateTransactionsCollectionInput) returns (ValidateTransactionsCollectionOutput); // Transactions Streaming
  // Called by Block Storage
  rpc CommitTransactionReceipts (CommitTransactionReceiptsInput) returns (CommitTransactionReceiptsOutput); // Receipts Streaming
  // Called by Gossip
  rpc GossipMessageReceived (GossipListenerInput) returns (GossipListenerOutput);
}

message AddNewTransactionInput {
  Transaction transaction = 1;
}

message AddNewTransactionOutputWithException {
  oneof result {
    AddNewTransactionOutput output = 1;
    AddNewTransactionException exception = 2;
  }
}

message AddNewTransactionOutput {
  oneof result {
    AddNewTransactionException exception = 1;
  }
}

message GetTransactionStatusInput {
  SHA256 txid = 1;
}

message GetTransactionStatusOutput {
  TransactionStatus transaction_status = 1;
}

message CollectTransactionsInput {
  Uint64 block_height = 1;
  Uint32 number_of_transactions = 2;
}

message CollectTransactionsOutput {
  oneof result {
    CollectTransactionsException exception = 1;
    repeated Transaction transactions = 2;
  }
}

enum CollectTransactionsException {
  RESERVED = 0;
  OUT_OF_SYNC = 1;
}

message ValidateTransactionsCollectionInput {
  repeated Transaction transactions = 1;
}

message ValidateTransactionsCollectionOutput {
  TransactionPoolStatus tx_pool_status = 1;
  TransactionsOrderingStatus status = 2;
}

enum TransactionsOrderingStatus {
  VALID = 0;
  INVALID = 1;
  FAILURE_OUT_OF_SYNC = 1;
}

message CommitTransactionReceiptsInput {
  ResultsBlock validation_block = 1; // Nullify sc_state_diff
}

message CommitTransactionReceiptsOutput {
  Unit64 consumer_block_height = 1;
  Uint64 target_block_height = 2;
}


message GetTransactionStatusInput {
  SHA256 txid = 1;
  Uint64 time_stamp = 2;
}

message GetTransactionStatusOutput {
  TransactionReceipt receipt = 1;
}
