syntax = "proto3";

import "primitives/transactions.proto";
import "primitives/gossip-listener.proto";
import "services/configuration-manager.proto";

service TransactionPool {
  rpc AddNewTransaction (AddNewTransactionInput) returns (AddNewTransactionOutput);
  rpc GetPendingTransactions (GetPendingTransactionsInput) returns (GetPendingTransactionsOutput);
  rpc ValidateTransactionsForOrdering (ValidateTransactionsForOrderingInput) returns (ValidateTransactionsForOrderingOutput);
  rpc MarkCommittedTransactions (MarkCommittedTransactionsInput) returns (MarkCommittedTransactionsOutput);
  rpc GetTransactionStatus (GetTransactionStatusInput) returns (GetTransactionStatusOutput);
  rpc GossipMessageReceived (GossipListenerInput) returns (GossipListenerOutput);
  rpc UpdateSubscriptionStatus (UpdateSubscriptionStatusInput) returns (UpdateSubscriptionStatusOutput);
}

message AddNewTransactionInput {
  Transaction transaction = 1;
}

message AddNewTransactionOutput {
  Bytes tx_id = 1;
}

message GetPendingTransactionsInput {
  Uint64 block_height = 1;
  Uint32 number_of_transactions = 2;
}

message GetPendingTransactionsOutput {
  TransactionPoolStatus tx_pool_status = 1;
  repeated Transaction transactions = 2;
}

enum TransactionPoolStatus {
  VALID = 0;
  OUT_OF_SYNC = 1;
  UNEXEPCETED_BLOCK_HEIGHT = 2;
}

message GetTransactionStatusInput {
  string txid = 1;
}

message GetTransactionStatusOutput {
  TransactionReceipt receipt = 1;
}

message MarkCommittedTransactionsInput {
  ValidationBlock validation_block = 1; // Nullify sc_state_diff
}

message MarkCommittedTransactionsOutput {
}

message ValidateTransactionsForOrderingInput {
  repeated Transaction transactions = 1;
}

message ValidateTransactionsForOrderingOutput {
  TransactionPoolStatus tx_pool_status = 1;
  TransactionsOrderingStatus status = 2;
}

enum TransactionsOrderingStatus {
  VALID = 0;
  INVALID = 1;
}