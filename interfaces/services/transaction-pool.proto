syntax = "proto3";

import "primitives/transactions.proto";
import "primitives/gossip-listener.proto";
import "services/configuration-manager.proto";

service TransactionPool {
  // Called by Public API
  rpc AddNewTransaction (AddNewTransactionInput) returns (AddNewTransactionOutput);
  rpc GetTransactionReceipt (GetTransactionReceiptInput) returns (GetTransactionReceiptOutput);
  // Called by Consensus Core
  rpc GetTransactionsForOrdering (GetTransactionsForOrderingInput) returns (GetTransactionsForOrderingOutput); // Transactions Streaming 
  rpc ValidateTransactionsForOrdering (ValidateTransactionsForOrderingInput) returns (ValidateTransactionsForOrderingOutput); // Transactions Streaming
  // Called by Block Storage
  rpc CommitTransactionReceipts (CommitTransactionReceiptsInput) returns (CommitTransactionReceiptsOutput); // Receipts Streaming
  
  // Gossip
  rpc GossipMessageReceived (GossipListenerInput) returns (GossipListenerOutput);
  rpc OnForwardedTransactions (OnForwardedTransactionsInput) returns (OnForwardedTransactionsOutput);
}

message AddNewTransactionInput {
  Transaction transaction = 1;
}

message AddNewTransactionOutput {

}

message GetTransactionStatusInput {
  SHA256 txid = 1;
}

message GetTransactionStatusOutput {
  TransactionStatus transaction_status = 1;
}

message GetTransactionsForOrderingInput {
  Uint64 block_height = 1;
  Uint32 number_of_transactions = 2;
}

message GetTransactionsForOrderingOutput {
  oneof result {
    CollectTransactionsException exception = 1;
    repeated Transaction transactions = 2;
  }
}

enum CollectTransactionsException {
  RESERVED = 0;
  OUT_OF_SYNC = 1;
}

message ValidateTransactionsForOrderingInput {
  repeated Transaction transactions = 1;
}

message ValidateTransactionsForOrderingOutput {
  TransactionPoolStatus tx_pool_status = 1;
  TransactionsOrderingStatus status = 2;
}

enum TransactionsOrderingStatus {
  VALID = 0;
  INVALID = 1;
  FAILURE_OUT_OF_SYNC = 1;
}

message CommitTransactionReceiptsInput {
  ResultsBlock validation_block = 1; // Nullify sc_state_diff
  Uint64 last_committed_block_height = 2;
}

message CommitTransactionReceiptsOutput {
  Unit64 next_desired_block_height = 1;
  Uint64 last_committed_block_height = 2;
}


message GetTransactionReceiptInput {
  SHA256 txid = 1;
  Uint64 time_stamp = 2;
}

message GetTransactionReceiptOutput {
  TransactionStatus transaction_status = 1;
  TransactionReceipt transaction_receipt = 2;
  Uint64 block_height = 3;
  Uint64 block_timestamp = 4;
}

message OnForwardedTransactionsInput {
  TransactionBatch transaction_batch = 1;
}

message OnForwardedTransactionsOutput {
  
}