syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/protocol-primitives.proto";
import "protocol/transaction.proto";
import "protocol/block.proto";
import "protocol/messages/transaction-relay.proto";
import "services/gossip.proto";

service TransactionPool {
  // Called by Public API
  rpc AddNewTransaction (AddNewTransactionInput) returns (AddNewTransactionOutput);
  rpc GetCommittedTransactionReceipt (GetCommittedTransactionReceiptInput) returns (GetCommittedTransactionReceiptOutput);
  // Called by Consensus Core
  rpc GetTransactionsForOrdering (GetTransactionsForOrderingInput) returns (GetTransactionsForOrderingOutput); 
  rpc ValidateTransactionsForOrdering (ValidateTransactionsForOrderingInput) returns (ValidateTransactionsForOrderingOutput); 
  // Called by Block Storage
  rpc CommitTransactionReceipts (CommitTransactionReceiptsInput) returns (CommitTransactionReceiptsOutput);
  
  // Gossip
  rpc GossipMessageReceived (GossipMessageReceivedInput) returns (GossipMessageReceivedOutput);
  rpc OnForwardedTransactions (OnForwardedTransactionsInput) returns (OnForwardedTransactionsOutput);
}

message AddNewTransactionInput {
  SignedTransaction signed_transaction = 1;
}

message AddNewTransactionOutput {
  TransactionStatus transaction_status = 1;
  TransactionReceipt transaction_receipt = 2;
  Uint64 block_height = 3;
  Uint64 block_timestamp = 4;
}

message GetCommittedTransactionReceiptInput {
  SHA256 txid = 1;
  Uint64 timestamp = 2;
}

message GetCommittedTransactionReceiptOutput {
  TransactionStatus transaction_status = 1;
  TransactionReceipt transaction_receipt = 2;
  Uint64 block_height = 3;
  Uint64 block_timestamp = 4;
}

message GetTransactionsForOrderingInput {
  Uint64 block_height = 1;
  Uint32 max_transactions_set_size_kb = 2;
  Uint32 max_number_of_transactions = 3;
}

message GetTransactionsForOrderingOutput {
  RequestStatus status = 1;
  repeated SignedTransaction signed_transaction = 2;
}

message ValidateTransactionsForOrderingInput {
  Uint64 block_height = 1;
  repeated SignedTransaction transaction = 2;
}

message ValidateTransactionsForOrderingOutput {
  RequestStatus status = 1;
}

message CommitTransactionReceiptsInput {
  ResultsBlockHeader results_block_header = 1;
  repeated ContractStateDiff contract_state_diff = 2;
  Uint64 last_committed_block_height = 3;
}

message CommitTransactionReceiptsOutput {
  Uint64 next_desired_block_height = 1;
  Uint64 last_committed_block_height = 2;
}

message OnForwardedTransactionsInput {
  ForwardedTransactionsMessage transaction_batch = 1;
}

message OnForwardedTransactionsOutput {
  
}