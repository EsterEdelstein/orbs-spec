syntax = "proto3";

import "protocol/transactions.proto";
import "protocol/blocks.proto";
import "internal/call-contract.proto";
import "internal/address_data";
import "services/configuration-manager.proto";

service VirtualMachine {
  rpc CallContract (CallContractInput) returns (CallContractOutput);
  rpc ProcessTransactionSet(ProcessTransactionSetInput) returns (ProcessTransactionSetOutput);
  rpc TransactionSetPreOrder(TransactionSetPreOrderInput) returns (TransactionSetPreOrderOutput);
}

message ProcessTransactionSetInput {
  Uint64 block_height = 1;
  repeated TransactionEntry ordered_transactions = 2;
}

message ProcessTransactionSetOutput {
  repeated TransactionReceipt transaction_receipts = 1;
  repeated ModifiedStateKey stateDiff = 2;
}

message CallContractInput {
  Uint64 block_height = 1;
  repeated TransactionEntry orderedTransactions = 2;
}

message CallContractOutput {
  repeated TransactionReceipt transaction_receipts = 1;
}

message TransactionSetPreOrderInput {
  Uint64 block_height = 1;
  Uint32 virtual_chain = 2;
  SubscriptionTier subscription = 3;
  repeated TransactionEntry ordered_transactions = 4; 
}

message TransactionSetPreOrderOutput {
  repeated PreOrderResult pre_order_result = 1;
}

message PreOrderStatus {
  PreOrderStatus status = 1;
}

enum PreOrderStatus {
  VALID = 0;
  INVALID_SIGNATURE = 1;
  SUBSCRIPTION_ERROR = 2;
}