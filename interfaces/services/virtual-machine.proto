syntax = "proto3";

import "protocol/transactions.proto";
import "protocol/blocks.proto";
import "internal/call-contract.proto";
import "internal/address_data";
import "services/configuration-manager.proto";

service VirtualMachine {
  // Called by Consensus Core
  rpc ProcessTransactionSet (ProcessTransactionSetInput) returns (ProcessTransactionSetOutput); // Transactions Streaming
  // Called by Public API
  rpc RunLocalMethod (RunLocalMethodInput) returns ();
  // Called by Transaction Pool
  rpc TransactionSetPreOrder (TransactionSetPreOrderInput) returns (TransactionSetPreOrderOutput); // Transactions Streaming
  // Called by Processor
  rpc ServiceMethodCall (MethodCallInput) returns (MethodCallOutput);
  rpc LibraryMethodCall (MethodCallInput) returns (MethodCallOutput);
  rpc SdkCall (SdkCallInput) returns (SdkCallOutput);
  rpc GetNameSpaceCode (GetNameSpaceCodeInput) returns (GetNameSpaceCodeOutput);
}


message ProcessTransactionSetInput {
  Uint64 block_height = 1;
  repeated Transaction transaction_set = 2;
}

message ProcessTransactionSetOutput {
  repeated TransactionReceipt transaction_receipts = 1;
  repeated ServiceStateDiff service_state_diff = 2;
}

message RunLocalMethodInput {
  Uint64 block_height = 1;
  Transaction transaction = 2; //TODO Local method format
}

message RunLocalMethodOutput {
  TODO status = 1;
  String result = 2;
}

message TransactionSetPreOrderInput {
  Uint64 block_height = 1;
  Uint32 virtual_chain = 2;
  repeated Transaction transaction_set = 3; 
}

message TransactionSetPreOrderOutput {
  repeated PreOrderResult pre_order_result = 1;
}

message PreOrderResult {
  PreOrderStatus status = 1;
}

enum PreOrderStatus {
  VALID = 0;
  INVALID_SIGNATURE = 1;
  INVALID_ADDRESS_SCHEME = 2;
  PRE_ORDER_NOT_APPROVED = 3;
}

message MethodCallInput {
  Uint32 context_id = 1;
  NameSpace name_space = 2;
  MethodAddress method = 3;
  repeated CallArguments arguments = 4;
}

message MethodCallOutput {
  Bool same_processor_execution = 1;
  repeated CallArguments output_argument = 2;  
}

message MethodCallArguments { //TODO binary / unify with Sdk.
  oneof type {
    Uint32 uint32 = 1;
    Uint64 uint64 = 2;
    String string = 3;
    // ...
  }
}

message SdkCallInput {
  Uint32 context_id = 1;
  NameSpace name_space = 2;
  MethodAddress method = 3;
  repeated SdkArgument input_argument = 4;
}

message SdkCallOutput {
  repeated SdkArgument output_argument = 1;
}

message SdkArgument {
  oneof type {
    Uint32 uint32 = 1;
    Uint64 uint64 = 2;
    String string = 3;
    // ...    
  }
}

message GetNameSpaceCodeInput {
  // Virtual Chain
  Uint32 context_id = 1;
  NameSpace name_space = 2;
}

message GetNameSpaceCodeOutput {
  Bytes code = 1;
}
