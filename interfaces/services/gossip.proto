syntax = "proto3";

import "protocol/primitives.proto";
import "protocol/transactions.proto";

service Gossip {
  rpc BroadcastMessage (BroadcastMessageInput) returns (BroadcastMessageOutput);
  rpc UnicastMessage (UnicastMessageInput) returns (UnicastMessageOutput);
}

message BroadcastMessageInput {
  GossipMessage gossip_message = 1;
}

message BroadcastMessageOutput {
  // empty
}

message UnicastMessageInput {
  GossipMessage gossip_message = 1;
}

message UnicastMessageOutput {
  // empty
}

message P2PEnvelope {
  repeated GossipMessage message = 1;
  Ed25519Proof signature = 2;
}

message GossipMessage {
  Uint32 version = 1;
  TargetType target_type = 2;
  String target = 3;
  Uint32 virtual_chain = 4;
  MessageGroup message_group = 5;
  Bytes payload = 6;
//  uint32 qos = 7;
}

enum MessageGroup {
  MANAGEMENT = 0;
  CONSENSUS = 1;
  TRANSACTIONS_GOSSIP = 2;
  NODE_SYNC = 3;
}

enum TargetType {
  BROADCAST = 0;
  UNICAST = 1;
}

message GossipMessageReceivedInput {
  GossipMessage gossip_message = 1;
}

message GossipMessageReceivedOutput {
// empty
}
