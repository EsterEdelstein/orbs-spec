syntax = "proto3";
package handlers;
option go_package = "github.com/orbs-network/orbs-spec/types/go/services/handlers";

import "../primitives/types.proto";
import "../protocol/gossip/transaction_relay.proto";
import "../protocol/gossip/block_sync.proto";
import "../protocol/gossip/lean_helix_consensus.proto";

option serialize_service_args = false;

service TransactionRelayGossipHandler {
    rpc HandleForwardedTransactions (HandleForwardedTransactionsInput) returns (GossipMessageHandlerOutput);
}

service BlockSyncGossipHandler {
    rpc HandleBlockAvailabilityRequest (HandleBlockAvailabilityRequestInput) returns (GossipMessageHandlerOutput);
    rpc HandleBlockAvailabilityResponse (HandleBlockAvailabilityResponseInput) returns (GossipMessageHandlerOutput);
    rpc HandleBlockSyncRequest (HandleBlockSyncRequestInput) returns (GossipMessageHandlerOutput);
    rpc HandleBlockSyncResponse (HandleBlockSyncResponseInput) returns (GossipMessageHandlerOutput);
}

service LeanHelixConsensusGossipHandler {
    rpc HandleLeanHelixPrePrepare (HandleLeanHelixPrePrepareInput) returns (GossipMessageHandlerOutput);
    rpc HandleLeanHelixPrepare (HandleLeanHelixPrepareInput) returns (GossipMessageHandlerOutput);
    rpc HandleLeanHelixCommit (HandleLeanHelixCommitInput) returns (GossipMessageHandlerOutput);
    rpc HandleLeanHelixViewChange (HandleLeanHelixViewChangeInput) returns (GossipMessageHandlerOutput);
    rpc HandleLeanHelixNewView (HandleLeanHelixNewViewInput) returns (GossipMessageHandlerOutput);
}

message GossipMessageHandlerOutput {
}

message HandleForwardedTransactionsInput {
    primitives.ed25519_pkey sender = 1;
    gossip.ForwardedTransactionsMessage message = 2;
}

message HandleBlockAvailabilityRequestInput {
    primitives.ed25519_pkey sender = 1;
    gossip.BlockSyncAvailabilityRequestMessage message = 2;
}

message HandleBlockAvailabilityResponseInput {
    primitives.ed25519_pkey sender = 1;
    gossip.BlockSyncAvailabilityResponseMessage message = 2;
}

message HandleBlockSyncRequestInput {
    primitives.ed25519_pkey sender = 1;
    gossip.BlockSyncRequestMessage message = 2;
}

message HandleBlockSyncResponseInput {
    primitives.ed25519_pkey sender = 1;
    gossip.BlockSyncResponseMessage message = 2;
}

message HandleLeanHelixPrePrepareInput {
    primitives.ed25519_pkey sender = 1;
    gossip.LeanHelixPrePrepareMessage message = 2;
}

message HandleLeanHelixPrepareInput {
    primitives.ed25519_pkey sender = 1;
    gossip.LeanHelixPrepareMessage message = 2;
}

message HandleLeanHelixCommitInput {
    primitives.ed25519_pkey sender = 1;
    gossip.LeanHelixCommitMessage message = 2;
}

message HandleLeanHelixViewChangeInput {
    primitives.ed25519_pkey sender = 1;
    gossip.LeanHelixViewChangeMessage message = 2;
}

message HandleLeanHelixNewViewInput {
    primitives.ed25519_pkey sender = 1;
    gossip.LeanHelixNewViewMessage message = 2;
}