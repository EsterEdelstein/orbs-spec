# 1. flows/send-transaction.md, Send transaction

participant GW Client SDK
participant GW Public API
participant GW Transaction Pool
participant GW Virtual Machine
participant GW Gossip
participant Nodes Gossip
participant Nodes Transaction Pool

GW Client SDK->GW Public API:Send Transaction
note over GW Public API
    Performs basic transaction checks
    Maintains session info
end note
GW Public API->GW Transaction Pool:AddNewTransaction
note over GW Transaction Pool
    Perfroms Transaction Checks
end note
GW Transaction Pool->+GW Virtual Machine:TransactionSetPreOrder
note over GW Virtual Machine
    Verifies Signatures and calls
    PreOrder smart contract
end note
GW Virtual Machine-->-GW Transaction Pool:valid
note over GW Transaction Pool
    Adds to pending pool
    Batches transactions for gossip and signs
end note
GW Transaction Pool->GW Gossip: Broadcast message
GW Gossip-->Nodes Gossip: Gossip message

Nodes Gossip->Nodes Transaction Pool:MessageReceived
note over Nodes Transaction Pool
    Checks GW node signature
    Adds to pending pool
end note

note over GW Transaction Pool
    Waits for block commit
end note

GW Transaction Pool->GW Public API:ReturnTransactionResults
GW Public API->GW Client SDK:SendTransaction response


# 2. flows/block-creation-before-commit.md, Leader flow

participant ConsensusAlgo
participant ConsensusContext
participant BlockStorage
participant TransactionPool
participant VirtualMachine
participant StateStorage
participant Gossip


ConsensusAlgo-->+BlockStorage:GetBlockHeader
BlockStorage-->-ConsensusAlgo:block header
ConsensusAlgo->+ConsensusContext:RequestCommittee
ConsensusContext->-ConsensusAlgo:ordered committee

note over ConsensusAlgo, ConsensusContext, BlockStorage, TransactionPool, VirtualMachine, StateStorage, Gossip
  Leader node - Ordering Phase
end note

ConsensusAlgo->+ConsensusContext:RequestNewTransactionsBlock
ConsensusContext->+TransactionPool:GetTransactionsForOrdering
note over TransactionPool
  Fetch transctions from pending
  transactions pool
end note 
TransactionPool->+VirtualMachine:TransactionSetPreOrder
note over VirtualMachine
  Verifies signatrues and calls 
  PreOrder smart contarct
end note 
VirtualMachine-->-TransactionPool:valid for ordering
TransactionPool-->-ConsensusContext: transactions set
note over ConsensusContext
  Caches TransactionsBlock
  for validation
end note
ConsensusContext-->-ConsensusAlgo:TransactionsBlock

note over ConsensusAlgo, ConsensusContext, BlockStorage, TransactionPool, VirtualMachine, StateStorage, Gossip
  Leader node - Validation Phase
end note

ConsensusAlgo->+ConsensusContext:RequestNewResultsBlock\n(may be called before complition of the ordering phase)
ConsensusContext->+VirtualMachine:ProcessTransactionSet
note over VirtualMachine
  Executes the transactions
end note 
VirtualMachine-->-ConsensusContext:transaction receipts
ConsensusContext->+StateStorage:GetStateHash
StateStorage-->-ConsensusContext:state hash
ConsensusContext-->-ConsensusAlgo:ResultsBlock
ConsensusAlgo->Gossip:Boradcast message to all other nodes (LeanHelix PrePrepare)


# 3. flows/block-creation-before-commit.md, Non-leader flow

participant Gossip
participant ConsensusAlgo
participant ConsensusContext
participant BlockStorage
participant TransactionPool
participant VirtualMachine
participant StateStorage


ConsensusAlgo-->+BlockStorage:GetBlockHeader
BlockStorage-->-ConsensusAlgo:block header
ConsensusAlgo->+ConsensusContext:RequestCommittee
ConsensusContext->-ConsensusAlgo:ordered committee

note over ConsensusAlgo, ConsensusContext, BlockStorage, TransactionPool, VirtualMachine, StateStorage, Gossip
  Non-leader committee node - Ordering Phase
end note

Gossip->ConsensusAlgo: GossipMessageReceived\n(Lean Helix PrePrepare)
ConsensusAlgo->+ConsensusContext:ValidateTransactionsForOrdering
ConsensusContext->+TransactionPool:ValidateTransactionsForOrdering
TransactionPool->+VirtualMachine:TransactionSetPreOrder
note over VirtualMachine
  Verifies signatrues and calls 
  PreOrder smart contarct
end note 
VirtualMachine-->-TransactionPool:valid for ordering
TransactionPool-->-ConsensusContext: valid
note over ConsensusContext
  Caches TransactionsBlock
  for validation
end note
ConsensusContext-->-ConsensusAlgo:valid

note over ConsensusAlgo, ConsensusContext, BlockStorage, TransactionPool, VirtualMachine, StateStorage, Gossip
  Non-leader committee node - Validation Phase
end note

ConsensusAlgo->+ConsensusContext:ValidateResultsBlock\n(may be called before the complition of the ordering phase)
ConsensusContext->+VirtualMachine:ProcessTransactionSet
note over VirtualMachine
  Executes the transactions
end note 
VirtualMachine-->-ConsensusContext:transaction receipts
ConsensusContext->+StateStorage:GetStateHash
StateStorage-->-ConsensusContext:state hash
note over VirtualMachine
  Compares to received block proposal
end note 
ConsensusContext-->-ConsensusAlgo:valid
ConsensusAlgo->Gossip:Boradcast message to all other nodes


# 4. flows/block-creation-after-commit.md

participant ConsensusAlgo
participant BlockStorage
participant StateStorage
participant TransactionPool
participant GW PublicAPI
participant GW Client SDK


ConsensusAlgo->BlockStorage:CommitBlock
BlockStorage->+StateStorage:CommitStateDiff
StateStorage-->-BlockStorage:next desired block height
BlockStorage->+TransactionPool:CommitTransactionReceipts
TransactionPool-->-BlockStorage:next desired block height
TransactionPool->GW PublicAPI:ReturnTransactionResults
GW PublicAPI->GW Client SDK: SendTransaction response


#5. flows/process_call.md

participant VirtualMachine
participant StateStorage
participant ProcessorA
participant ProcessorB
participant CrosschainConnector


VirtualMachine->+StateStorage:Get processor (ReadKeys)
StateStorage-->-VirtualMachine: processor / not found
opt Deploy
    VirtualMachine->StateStorage: DeployService
end
note over VirtualMachine
  allocate execution context
  and batch transient state
end note

loop For each transaction
  note over VirtualMachine
    Prepare transction context
  end note
  VirtualMachine->+ProcessorA:ProcessCall

  ProcessorA->+VirtualMachine:SdkCall(ReadKeys)
  VirtualMachine->+StateStorage:ReadKeys
  StateStorage-->-VirtualMachine:values
  VirtualMachine-->-ProcessorA:values

  ProcessorA->+VirtualMachine:SdkCall(Call contract)
  VirtualMachine->+ProcessorB:ProcessCall
  ProcessorB-->-VirtualMachine:output
  VirtualMachine-->-ProcessorA:output
 
  ProcessorA->+VirtualMachine:SdkCall(CallEthereumContract)
  VirtualMachine->+CrosschainConnector:CallEthereumContract
  CrosschainConnector-->-VirtualMachine:values
  VirtualMachine-->-ProcessorA:values

  ProcessorA-->-VirtualMachine:output

  note over VirtualMachine
    Update batch transient state
  end note
end
note over VirtualMachine
  Prepare combined StateDiff
end note


#6. flows/call-method.md

participant Client SDK
participant Public API
participant Block Storage
participant Virtual Machine

Client SDK->Public API:CallMethod
note over Public API
    Basic transaction checks
    Maintain Session Info
end note
Public API->Block Storage:GetLastCommittedBlockHeight
Public API->+Virtual Machine:RunLocalMethod
note over VirtualMachine
  Checks permissions
  Executes the method
end note 
Virtual Machine-->-Public API:output
Public API->Client SDK:CallMethod response


